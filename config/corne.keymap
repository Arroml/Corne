/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>



&msc {
    x-input-code = <INPUT_REL_HWHEEL>;
    y-input-code = <INPUT_REL_WHEEL>;
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <0>;
};

&tog {
};

/ {
    behaviors {
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 41>;
            tapping-term-ms = <120>;
            quick-tap-ms = <120>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick-tap-ms = <120>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <16 15>;
            layers = <0 4 1 2 3 5 6 7>;
        };

        AE {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            layers = <4 0 1 2 3 5 6 7>;
        };

        UE {
            bindings = <&kp DELETE>;
            key-positions = <20 21>;
        };

        SZ {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };
    };

    macros {
        Mail: Mail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp R &kp N6 &kp N0 &kp N3 &kp N8 &kp N9 &kp LA(L) &kp G &kp O &kp O &kp G &kp L &kp E &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "MAIL";
        };

        Anschreiben: Anschreiben {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(S) &kp E &kp H &kp R &kp SPACE &kp G &kp E &kp E &kp H &kp R &kp T &kp E &kp SPACE &kp LS(D) &kp A &kp M &kp E &kp N &kp SPACE &kp U &kp N &kp D &kp SPACE &kp LS(H) &kp E &kp R &kp R &kp E &kp N &kp COMMA &kp RET>;
            label = "ANSCHREIBEN";
        };

        mfg: mfg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(M) &kp I &kp T &kp SPACE &kp F &kp R &kp E &kp U &kp N &kp D &kp L &kp I &kp C &kp H &kp E &kp N &kp SPACE &kp G &kp R &kp LBKT &kp MINUS &kp E &kp N &kp SPACE &kp RET &kp LS(A) &kp L &kp E &kp X &kp A &kp N &kp D &kp E &kp R &kp SPACE &kp LS(R) &kp O &kp M &kp A &kp N>;
            label = "MFG";
        };

        switchMac: switchMac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &tog 0>;
            label = "SWITCHMAC";
        };

        switchLinux: switchLinux {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &tog 4>;
            label = "SWITCHLINUX";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        macDefault {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q                &kp W        &kp E          &kp R              &kp T          &kp Y        &kp U                       &kp I             &kp O        &kp P                 &trans
&trans  &hml LEFT_CONTROL A  &hml LALT S  &hml LGUI D    &hml LEFT_SHIFT F  &kp G          &kp H        &hmr RIGHT_SHIFT J          &hmr LGUI K       &hmr LALT L  &hmr LCTRL SEMICOLON  &trans
&trans  &kp Z                &kp X        &kp C          &kp V              &kp B          &kp N        &kp M                       &kp COMMA         &kp PERIOD   &kp SLASH             &trans
                                          &kp BACKSPACE  &lt 3 TAB          &lt 2 SPACE    &lt 1 ENTER  &hmr LC(LA(LG(RSHFT))) SQT  &kp LEFT_BRACKET
            >;
        };

        macNum {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1                    &kp N2                &kp N3                       &kp N4                  &kp N5                     &kp N6    &kp N7    &kp N8     &kp N9      &kp N0                  &trans
&trans  &hmr LEFT_CONTROL LS(N5)  &hmr LEFT_ALT LS(N7)  &hmr LEFT_GUI RIGHT_BRACE    &hml LEFT_SHIFT LS(N0)  &kp RIGHT_BRACKET          &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT   &kp LA(LC(LG(LS(N1))))  &trans
&trans  &kp LG(NUBS)              &kp NON_US_BSLH       &trans                       &trans                  &kp F24                    &trans    &kp HOME  &kp COMMA  &kp PERIOD  &kp SLASH               &trans
                                                        &hml LEFT_CONTROL BACKSPACE  &kp LEFT_ALT            &hml SPACE LEFT_COMMAND    &trans    &trans    &trans
            >;
        };

        macZeichen {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LA(N)          &kp LA(N8)                  &kp LA(N8)              &kp LA(N9)    &kp CARET         &kp PERCENT       &kp LA(RIGHT_BRACKET)  &kp LS(EQUAL)   &kp LS(MINUS)  &trans
&trans  &kp BACKSLASH     &kp LS(BACKSLASH)  &hml LEFT_GUI LS(NUMBER_2)  &hml LEFT_SHIFT LS(N8)  &kp LS(N9)    &kp LS(NUMBER_4)  &kp LS(NUMBER_6)  &kp LA(GRAVE)          &kp LA(Q)       &kp BACKSLASH  &trans
&trans  &kp GRAVE         &kp LS(GRAVE)      &kp LA(N5)                  &kp LA(N7)              &kp LA(N0)    &trans            &kp SLASH         &kp LA(MINUS)          &kp LS(PERIOD)  &kp LS(SLASH)  &trans
                                             &trans                      &trans                  &trans        &kp RET           &trans            &trans
            >;
        };

        macF {
            bindings = <
&trans  &kp F1      &kp F2   &kp F3        &kp F4      &kp F5                      &kp F6           &kp F7          &kp F8        &kp F9             &kp F10                 &trans
&trans  &kp F11     &kp F12  &switchLinux  &switchMac  &trans                      &kp C_VOLUME_UP  &msc SCRL_DOWN  &msc SCRL_UP  &kp C_VOLUME_DOWN  &trans                  &trans
&trans  &bt BT_CLR  &trans   &trans        &trans      &kp LS(LG(LC(NUMBER_4)))    &trans           &trans          &trans        &trans             &kp LG(LA(DOWN_ARROW))  &trans
                             &trans        &trans      &trans                      &trans           &trans          &trans
            >;
        };

        lunuxDefault {
            bindings = <
&trans  &kp Q                &kp W        &kp E          &kp R              &kp T          &kp Y        &kp U                  &kp I             &kp O        &kp P                 &trans
&trans  &hml LEFT_CONTROL A  &hml LALT S  &hml LGUI D    &hml LEFT_SHIFT F  &kp G          &kp H        &hmr RIGHT_SHIFT J     &hmr LGUI K       &hmr LALT L  &hmr LCTRL SEMICOLON  &trans
&trans  &kp Z                &kp X        &kp C          &kp V              &kp B          &kp N        &kp M                  &kp COMMA         &kp PERIOD   &kp SLASH             &trans
                                          &kp BACKSPACE  &lt 7 TAB          &lt 6 SPACE    &lt 5 ENTER  &hmr LC(LG(LALT)) SQT  &kp LEFT_BRACKET
            >;
        };

        linuxNum {
            bindings = <
&trans  &kp N1                    &kp N2                &kp N3                       &kp N4                  &kp N5                     &kp N6    &kp N7    &kp N8     &kp N9      &kp N0                  &trans
&trans  &hmr LEFT_CONTROL LS(N5)  &hmr LEFT_ALT LS(N7)  &hmr LEFT_GUI RIGHT_BRACE    &hml LEFT_SHIFT LS(N0)  &kp RIGHT_BRACKET          &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT   &kp LA(LC(LG(LS(N1))))  &trans
&trans  &kp LG(LESS_THAN)         &kp LS(LESS_THAN)     &trans                       &trans                  &kp F24                    &trans    &kp HOME  &kp COMMA  &kp PERIOD  &kp SLASH               &trans
                                                        &hml LEFT_CONTROL BACKSPACE  &kp LEFT_ALT            &hml SPACE LEFT_COMMAND    &trans    &trans    &trans
            >;
        };

        linuxZeichen {
            bindings = <
&trans  &kp LS(NUMBER_1)      &kp LA(N)                 &kp RA(N8)                  &kp RA(N8)              &kp RA(N9)    &kp CARET         &kp PERCENT       &kp RA(RIGHT_BRACKET)     &kp LS(EQUAL)   &kp LS(MINUS)  &trans
&trans  &kp BACKSLASH         &kp LS(BACKSLASH)         &hml LEFT_GUI LS(NUMBER_2)  &hml LEFT_SHIFT LS(N8)  &kp LS(N9)    &kp LS(NUMBER_4)  &kp LS(NUMBER_6)  &kp RA(NON_US_BACKSLASH)  &kp RA(Q)       &kp BACKSLASH  &trans
&trans  &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp RA(N5)                  &kp RA(N7)              &kp RA(N0)    &trans            &kp SLASH         &kp RA(MINUS)             &kp LS(PERIOD)  &kp LS(SLASH)  &trans
                                                        &trans                      &trans                  &trans        &kp RET           &trans            &trans
            >;
        };

        linuxF {
            bindings = <
&trans  &kp F1      &kp F2   &kp F3        &kp F4      &kp F5                      &kp F6           &kp F7          &kp F8        &kp F9             &kp F10                 &trans
&trans  &kp F11     &kp F12  &switchLinux  &switchMac  &trans                      &kp C_VOLUME_UP  &msc SCRL_DOWN  &msc SCRL_UP  &kp C_VOLUME_DOWN  &trans                  &trans
&trans  &bt BT_CLR  &trans   &trans        &trans      &kp LS(LG(LC(NUMBER_4)))    &trans           &trans          &trans        &trans             &kp LG(LA(DOWN_ARROW))  &trans
                             &trans        &trans      &trans                      &trans           &trans          &trans
            >;
        };
    };
};
